<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://jiangling500.github.io</id>
    <title>jiangling500</title>
    <updated>2021-01-02T07:26:48.057Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://jiangling500.github.io"/>
    <link rel="self" href="https://jiangling500.github.io/atom.xml"/>
    <subtitle>万丈高楼平地起，勿在浮沙筑高台！</subtitle>
    <logo>https://jiangling500.github.io/images/avatar.png</logo>
    <icon>https://jiangling500.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, jiangling500</rights>
    <entry>
        <title type="html"><![CDATA[MySQL]]></title>
        <id>https://jiangling500.github.io/post/mysql/</id>
        <link href="https://jiangling500.github.io/post/mysql/">
        </link>
        <updated>2021-01-02T07:05:28.000Z</updated>
        <content type="html"><![CDATA[<p>查看 MySQL 支持的存储引擎：</p>
<pre><code>SHOW ENGINES;
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[JDBC]]></title>
        <id>https://jiangling500.github.io/post/java/</id>
        <link href="https://jiangling500.github.io/post/java/">
        </link>
        <updated>2021-01-02T05:12:41.000Z</updated>
        <content type="html"><![CDATA[<h2 id="jdbc-本质">JDBC 本质</h2>
<p>官方定义的一套操作所有关系型数据库的规则，即接口。各个数据库厂商去实现这套接口，提供数据库驱动 jar 包。我们可以使用这套接口(JDBC)编程，真正执行的代码是驱动 jar 包中的实现类。</p>
<h2 id="下载-mysql-驱动包">下载 MySQL 驱动包</h2>
<p>打开<a href="https://dev.mysql.com/downloads/connector/j/">MySQL驱动包官网下载地址</a>，操作系统选择平台无关的，即<strong>Platform Independent</strong>，然后下载<strong>zip</strong>格式的，解压缩后即可得到 MySQL 驱动 jar 包。</p>
<h2 id="导入-jar-包到-idea-中">导入 jar 包到 idea 中</h2>
<h3 id="方法一">方法一</h3>
<p><strong>File</strong>--&gt;<strong>Project Structure</strong>--&gt;<strong>Modules</strong>--&gt;<strong>Dependencies</strong>--&gt;添加 MySQL 驱动 jar 包。</p>
<h3 id="方法二">方法二</h3>
<p>在 idea 项目中新建 libs 目录，然后复制 MySQL 驱动 jar 包，在 idea 中选择 libs 目录，直接粘贴，即可把 MySQL 驱动 jar 包复制到了 libs 目录中。在 idea 的 libs 目录中，右键 MySQL 驱动 jar 包，选择<strong>Add as Library</strong>，即可导入 MySQL 驱动 jar 包到项目中。</p>
<p>java.sql包下的接口</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[关于Gridea]]></title>
        <id>https://jiangling500.github.io/post/guan-yu-gridea/</id>
        <link href="https://jiangling500.github.io/post/guan-yu-gridea/">
        </link>
        <updated>2021-01-01T15:23:59.000Z</updated>
        <content type="html"><![CDATA[<h2 id="gridea一同步邮箱就收到github发送的邮件">Gridea一同步，邮箱就收到Github发送的邮件</h2>
<p>邮件内容如下：</p>
<pre><code>The page build completed successfully, but returned the following warning for the `main` branch:

Your CNAME file was ignored because this repository is automatically hosted from jiangling500.github.io already. See https://docs.github.com/articles/setting-up-your-pages-site-repository/

For information on troubleshooting Jekyll see:

  https://docs.github.com/articles/troubleshooting-jekyll-builds

If you have any questions you can submit a request on the Contact GitHub page at https://support.github.com/contact?repo_id=325996040&amp;page_build_id=224445559
</code></pre>
<p>这是因为在<strong>远程</strong>--&gt;<strong>基础配置</strong>中有配置过 <strong>CNAME</strong>，Gridea 在同步时，会上传 CNAME 文件到 Github 上，解决办法就是不让 Gridea 上传 CNAME 文件到 Github 上。但此时即使将 <strong>CNAME</strong> 配置为空，再点同步仍然会收到邮件，这是因为 Gridea 已经生成了 CNAME 文件，每次在同步时都会将 CNAME 上传至 Github，需要将 Gridea 生成的文件全部删除。具体操作就是，点 Gridea 左下角的配置按钮，打开<strong>站点源文件路径</strong>，将 Gridea 整个文件夹删除，最好再将 github.io 仓库也删除重新创建，下次再配置<strong>远程</strong>--&gt;<strong>基础配置</strong>时，不要配置 <strong>CNAME</strong>，保持该项为空。至此，Gridea 再同步时就不会再收到 Github 发送的邮件了。</p>
]]></content>
    </entry>
</feed>